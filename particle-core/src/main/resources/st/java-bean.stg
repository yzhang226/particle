javaBean(bean, options)
::= <<
package <bean.packageName>;

<! required class names !>
<bean.requiredClassNames:{name|import <name>;};separator="\n">

/**
 * <bean.comment>
 * Created by <options.currentUserName> on <options.currentDate>.
 */
<bean.annotationNames:{name|@<name>};separator="\n">
<bean.modifiers:{name|<name>};separator=" "> <bean.beanName> <if(bean.extendClassName)>extends <bean.extendClassName><if(bean.extendClassGenericTypes)>\<<bean.extendClassGenericTypes:{name|<name>};separator=", ">\><endif><endif> <\\>
<if(bean.interfaceNames)>implements <bean.interfaceNames:{name|<name>};separator=", "><endif> {

<! all bean properties oneProperty() !>
<bean.properties:outPropertyDefinition(options);separator="\n">

<if(bean.enableGetterSetter&&!bean.enableLombok)>
<bean.properties:outPropertyGetterSetter(options);separator="\n">
<endif>

<if(bean.methods)>
<bean.methods:outMethod();separator="\n">
<endif>

}

>>

outPropertyDefinition(prop, options)
::= <<
    /**
     * <prop.comment>
<if(prop.defaultValue)>
     * 默认值: <prop.defaultValue>
<endif>
     */
    <prop.annotationNames:{name|@<name>};separator="\n">
    <prop.modifiers:{name|<name>};separator=" "> <prop.propertyTypeName> <prop.propertyName>;

>>

outPropertyGetterSetter(prop, options)
::= <<

    public <prop.propertyType.simpleName> get<prop.propertyNameUpperCamelCase>() {
        return <prop.propertyName>;
    }

    public void set<prop.propertyNameUpperCamelCase>(<prop.propertyType.simpleName> <prop.propertyName>) {
        this.<prop.propertyName> = <prop.propertyName>;
    }

>>

outMethod(method)
::= <<
    <method.comment>
    <method.annotationNames:{name|@<name>};separator="\n">
    <method.modifiers:{name|<name>};separator=" "> <method.returnTypeName> <method.methodName>(<if(method.parameters)><method.parameters:outMethodParameter();separator=", "><endif>) {
        <method.methodContent>
    }

>>

outMethodParameter(parameter)
::= <<
<parameter.parameterType><if(bean.interfaceNames)>\<<parameter.genericTypes:{name|<name>};separator=", ">\><endif> <parameter.parameterName>
>>
